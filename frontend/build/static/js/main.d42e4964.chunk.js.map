{"version":3,"sources":["api.js","apiCalls/index.js","Components/Context/WorkoutContext.js","Components/Workouts/index.js","Components/Home/index.js","Components/Login/LoginForm.js","Components/Login/index.js","Components/Context/ExerciceContext.js","Components/NewExercice/index.js","Components/Exercices/index.js","Components/AddExerciceToWorkoutForm/Select.js","Components/AddExerciceToWorkoutForm/index.js","Components/Workout/index.js","Components/NewWorkout/index.js","App.js","serviceWorker.js","index.js"],"names":["token","localStorage","getItem","api","axios","create","baseURL","headers","getExercices","setExercices","get","then","response","data","catch","error","console","getWorkouts","setWorkouts","modifyWorkout","workout","put","_id","WorkoutContext","createContext","WorkoutProvider","props","useState","title","exercice","name","reps","series","performedSeries","workouts","useEffect","Provider","value","children","Workouts","useContext","workoutsList","map","key","className","to","size","color","length","xmlns","viewBox","fill","d","Home","LoginForm","initialState","email","password","formValues","setFormValues","handleChange","evt","target","htmlFor","placeholder","id","type","onChange","onClick","preventDefault","post","setItem","log","Login","ExerciceContext","ExerciceProvider","exercices","NewExercice","closeForm","limb","handleChangeForm","config","Exercices","button","clickedButton","setClickedButton","exercicesList","delete","deleteExercice","NewExerciceTitle","Select","options","undefined","selectedValue","setSelectedValue","openList","setOpenList","handleOpenList","e","list","option","i","AddExerciceToWorkoutForm","getValue","exercicesTitles","exerciceTitle","open","setOpen","event","parseInt","Array","x","Workout","useParams","setWorkout","getWorkoutById","incrementperformedSeries","index","reset","Div","checked","exerciceDetails","splice","deleteExerciceToWorkout","push","NewWorkout","errorMessage","setErrorMessage","history","useHistory","form","setForm","initialExercice","exerciceArray","setExerciceArray","required","autoComplete","defaultValue","hidden","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d42e4964.chunk.js","sourcesContent":["import axios from 'axios'\n    const token = localStorage.getItem('token')\n    \nconst api = axios.create({\n  baseURL: 'https://us-central1-pwero-9b223.cloudfunctions.net/app/api/',\n  headers: {'Authorization': `Bearer ${token}`}\n  \n});\n\n\nexport default api","import api from '../api'\n\nexport const getExercices = (setExercices) => {\n\n  api.get('exercice')\n      .then(function (response) {\n        setExercices(response.data)\n      })\n      .catch(function (error) { \n        console.error(error);\n      })\n}\nexport const getWorkouts = (setWorkouts) => {\n\n  api.get('workout')\n      .then(function (response) {\n        setWorkouts(response.data)\n      })\n      .catch(function (error) { \n        console.error(error);\n      })\n}\nexport const deleteExercice = (exercice, setExercices) => {\n    \n  api.delete(`exercice/${exercice._id}`, )\n    .then(function () {\n      // reload datas from API\n      getExercices(setExercices)\n    })\n    .catch(function (error) {\n      console.error(error);\n    })  \n}\nexport const modifyWorkout = (workout) => {\n\n  // workout.exercice.push(value)\n    \n  api.put(`workout/${workout._id}`, workout  )\n    .then(function () {\n      // reload datas from API\n      // getWorkouts(setWorkouts)\n    })\n    .catch(function (error) {\n      console.error(error);\n    })  \n}\n\n","import React, { useState, useEffect, createContext } from \"react\"\nimport { getWorkouts } from '../../apiCalls/index'\n\nexport const WorkoutContext = createContext()\n\nexport const WorkoutProvider = (props) => {\n\n  const object = [\n    {_id: 123,\n     title: \"seance demo1\",\n     exercice: [{\n      name: 'développé couché',\n      reps: 10,\n      series: 5,\n      performedSeries: 0\n      },\n      {\n        name: 'abdos',\n        reps: 10,\n        series: 5,\n        performedSeries: 0\n       }]\n    },\n    \n    {_id: 345,\n       title: \"seance demo 2\",\n       exercice: [{\n        name: 'développé incliné',\n        reps: 10,\n        series: 4,\n        performedSeries: 0\n      },\n      {\n        name: 'pompes',\n        reps: 10,\n        series: 10,\n        performedSeries: 0\n      },\n      {\n        name: 'pompes',\n        reps: 10,\n        series: 10,\n        performedSeries: 0\n      }]\n    \n    }]\n  \n  const [workouts, setWorkouts] = useState(object)\n  \n  \n    useEffect(() => {\n      // get all workouts from Api\n      getWorkouts(setWorkouts)  \n  },[])\n  \n  \n  \n\nreturn (\n  <WorkoutContext.Provider value={[workouts, setWorkouts]}>\n    {props.children}\n  </WorkoutContext.Provider>\n)\n}\n","import React, {useContext} from 'react'\nimport {WorkoutContext} from '../Context/WorkoutContext'\nimport {Link} from 'react-router-dom'\n\n// icons\nimport { BiDumbbell } from \"react-icons/bi\"\nimport { BsPlayFill } from \"react-icons/bs\"\nimport { IoIosAddCircle } from \"react-icons/io\"\n\n\nfunction Workouts() {\n\n  const [workouts] = useContext(WorkoutContext)\n  \n  let workoutsList = workouts.map((workout)=> \n    <Link key={workout._id} className=\"link\" to={`/workout/${workout._id}`}>          \n      <div className=\"workouts-container\" >\n        <div className=\"workouts\">\n            <div className=\"verticalcenter\">\n              <BiDumbbell className=\"dumbbell\" size={32}/>\n            </div>\n            <div className=\"workout-title\">\n              <h4>{workout.title}</h4>\n              <div className=\"verticalcenter\"><BsPlayFill color='#12C380'/>Go!</div>\n            </div>\n            <div>\n              <div className=\"workouts-exercice-number\">{workout.exercice.length}</div>\n              <div className=\"workouts-exercices\">{`${workout.exercice.length > 1 ? 'exercices' : 'exercice'}`}</div>\n            </div>\n          </div>\n      </div>\n    </Link>\n  )\n  \n  // let limb = exercices.map((item, i ) => <p key={i}>{item.limb}</p>)\n  \n    return (\n      <div>\n        <div className=\"workouts-container\">\n          <div className=\"workouts-header\">\n            <div className=\"workouts-title\">Mes Workouts</div> \n          </div>\n          <div className=\"wave-container\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n              <path fill=\"#2F313E\" d=\"M0,224L48,197.3C96,171,192,117,288,96C384,75,480,85,576,117.3C672,149,768,203,864,197.3C960,192,1056,128,1152,112C1248,96,1344,128,1392,144L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>    \n            </svg>\n            <div className=\"workouts-list\">{workoutsList}</div>\n          </div>   \n            <div className=\"workouts-add\">\n            <Link to='/new-workout'>\n              <IoIosAddCircle size={64} color={'#12C380'}/>\n            </Link>\n            </div> \n        </div>\n      </div> \n    );\n  }\n\n  export default Workouts;","import React from 'react'\nimport Workouts from '../Workouts'\n\nfunction Home() {\n\n    return (\n      <div className=\"home\">\n        <Workouts />    \n      </div>   \n    );\n  }\n\n  export default Home;","import React, {useState} from 'react'\nimport api from '../../api'\n\nfunction LoginForm  () {\n\n  const initialState = {\n    \n    email: '',\n    password: ''\n  }\n  const [formValues, setFormValues] = useState(initialState)\n\n  const handleChange= (evt) => {\n    const name = evt.target.name\n    \n    setFormValues({\n      ...formValues,\n      [name]: evt.target.value\n    })\n    \n  }\n    \n  const handleSubmit = (evt) => {\n\n    evt.preventDefault()\n    \n    api.post('auth/login', \n      formValues)\n    .then(function (response) {\n      \n      const token = response.data.token\n      localStorage.setItem('token', token)\n    })\n    .catch(function (error) {\n      console.log(error)\n      \n    })\n    setFormValues(initialState)\n  }\n  return (\n    <div className=\"login-form\">\n      <div>Login Form</div>\n      <label htmlFor=\"form-new-exercice-description\">email</label>\n      <input placeholder='' value={formValues.email} name=\"email\" id=\"form-auth-email\" type=\"text\" onChange={handleChange} />\n      <label htmlFor=\"form-new-exercice-type\">password</label>\n      <input placeholder='' value={formValues.password} name=\"password\" id=\"form-auth-password\" type=\"password\" onChange={handleChange} />\n      <button onClick={handleSubmit} >submit</button>\n    </div>\n    \n  ) \n}\n\nexport default LoginForm","import React from 'react'\nimport LoginForm from './LoginForm'\n\nfunction Login  () {\n  \n  return (\n    <div className=\"login\">\n      <LoginForm />\n    </div>\n    \n  ) \n}\n\nexport default Login","import React, {useState, createContext, useEffect} from \"react\"\nimport { getExercices } from '../../apiCalls/index'\n\nexport const ExerciceContext = createContext()\n\nexport const ExerciceProvider = (props) => {\n  const [exercices, setExercices] = useState([])\n  \n  useEffect(() => {\n    \n    // load datas from API\n    getExercices(setExercices)\n  },[])\n\nreturn (\n  <ExerciceContext.Provider value={[exercices, setExercices]}>\n    {props.children}\n  </ExerciceContext.Provider>\n)\n}\n","import React, {useState, useContext} from 'react'\nimport api from '../../api'\nimport {ExerciceContext} from '../Context/ExerciceContext'\nimport { getExercices } from '../../apiCalls/index'\n\nfunction NewExercice({closeForm}) {\n\n  const initialState = {\n    title: '',\n    limb: ''\n  }\n  \n  const [formValues, setFormValues] = useState(initialState)\n  const [exercices, setExercices] = useContext(ExerciceContext)\n\n\n  const handleChangeForm= (evt) => {\n    const name = evt.target.name\n    \n    setFormValues({\n      ...formValues,\n      [name]: evt.target.value\n    })\n    \n  }\n\n  const handleSubmitForm = (evt) => {\n\n    evt.preventDefault()\n    const token = localStorage.getItem('token')\n    const config = {headers: {'Authorization': `Bearer ${token}`}}\n    \n    api.post('exercice', \n      formValues,\n      config\n      )\n    .then(function (response) {\n      \n      // reload datas from API\n      getExercices(setExercices)\n    \n    })\n    .catch(function (error) {\n      console.log(error) \n    });\n    setFormValues(initialState)\n\n    closeForm(formValues.title)\n  }\n\n    return (\n   \n        <form className=\"form-new-exercice\">\n          <label htmlFor=\"form-new-exercice-title\">Exercice</label>\n          <input placeholder='Curl Biceps' value={formValues.title} name=\"title\" id=\"form-new-exercice-title\" type=\"text\" onChange={handleChangeForm} />\n          <label htmlFor=\"form-new-exercice-limb\">Muscle activé</label>\n          <input placeholder='Biceps' value={formValues.limb} name=\"limb\" id=\"form-new-exercice-limb\" type=\"text-area\" onChange={handleChangeForm} />\n          <button onClick={handleSubmitForm} >submit</button>\n        </form> \n    );\n  }\n\n  export default NewExercice;","import React, {useState, useContext} from 'react'\nimport {ExerciceContext} from '../Context/ExerciceContext'\nimport NewExercice from '../NewExercice'\nimport {deleteExercice} from '../../apiCalls/index'\n\n//icons\nimport { MdDeleteForever } from \"react-icons/md\"\nimport { AiFillPlusCircle } from \"react-icons/ai\"\n\nfunction Exercices() {\n\n  const [exercices, setExercices] = useContext(ExerciceContext)\n  const [clickedButton, setClickedButton] = useState({button: false})\n\n  const openForm = () => {\n    setClickedButton({button: true})\n    if (clickedButton.button === false) {\n      setClickedButton({button: true})\n    } else if (clickedButton.button === true)\n    setClickedButton({button: false})\n  }\n\n  const closeForm = (NewExerciceTitle) => {\n    setClickedButton({button: false, title: NewExerciceTitle})\n  }\n\n\n  let exercicesList = exercices.map((exercice) =>\n  <div key={exercice._id}>\n    <div className=\"exercices-list\" >\n      <div>{exercice.title}</div>\n      <div><MdDeleteForever color={'#E2697E'} size={24} onClick={() => deleteExercice(exercice, setExercices)}/></div>\n    </div>\n    <div className=\"exercices-border\"></div>\n\n  </div> \n\n  )\n  // let limb = exercices.map((item, i ) => <p key={i}>{item.limb}</p>)\n  \n  \n    return (\n      \n        <div className=\"exercices-container\">\n          <h1>Exercices</h1>\n          <div className=\"exercices\" onClick={openForm}>\n            <h3>Ajouter</h3> \n            <div className=\"exercices-add-button\"><AiFillPlusCircle size={24} color={'#fff'}/></div> \n          </div>\n          <div>{clickedButton.button && <NewExercice closeForm={closeForm}/>}</div>  \n          <div>{exercicesList}</div>\n        </div>\n        \n      \n    );\n  }\n\n  export default Exercices;","import React, { useState } from 'react';\nimport { AiFillPlusCircle } from \"react-icons/ai\"\nimport './Select.scss';\n\nfunction Select({options, size, value}) {\n  \n  if (options === undefined) {\n    options = []\n  }\n\n  // State \n  const [selectedValue, setSelectedValue] = useState('Ajouter un exercice')\n  const [openList, setOpenList] = useState(false)\n  \n  \n  // Open and close Select div\n  const handleOpenList = () => {\n    if (openList === false) {\n      setOpenList(true)\n    } else if (openList === true)\n      setOpenList(false)\n  }\n  const handleChange = (e) => {\n    \n    value = e.target.value\n    setSelectedValue(value)\n  }\n  // create an input for each item in listValues array\n  const list = options.map((option, i) => <label key={i} className='label' htmlFor={option}> {option}<input id={option} key={i} type=\"checkbox\" value={option} name=\"name\" onChange={handleChange} onClick={handleOpenList}/></label> )\n  \n  return (\n    <div className={`select-wrapper-${size}`}>\n      <div className=\"select-container\">\n        <div className=\"select\" onClick={handleOpenList}>\n          <div>\n            {selectedValue}\n          </div>\n          <div>\n            <AiFillPlusCircle size={32}/>\n          </div> \n        </div>\n        <div className=\"select-form-container\">\n          <div className={`select-form ${openList ? \"select-form\" : \"select-form-open\"}`}>\n            {list}\n          </div>\n        </div>\n      </div>  \n    </div>\n  );\n}\nexport default Select;","import React,{ useState, useContext } from 'react'\nimport Select from './Select'\nimport {ExerciceContext} from '../Context/ExerciceContext'\nimport { AiFillPlusCircle } from \"react-icons/ai\"\n\nfunction AddExerciceToWorkoutForm  ({getValue}) {\n\n  const exercices = useContext(ExerciceContext)\n  const exercicesTitles = exercices[0].map(exerciceTitle => exerciceTitle.title)\n\n  const [open, setOpen] = useState(false)\n  const [formValues, setFormValues] = useState({\n    name: '',\n    reps: 1,\n    series: 1,\n    performedSeries: 0\n\n  })\n\n  const handleChange = (event) => {\n\n    const name = event.target.name\n     setFormValues({\n       ...formValues,\n       [name]: event.target.name === \"name\" ?  event.target.value : parseInt(event.target.value, 10)  \n    })\n    \n  }\n  const handleSubmit = (event) => {\n    \n    event.preventDefault()\n    // close select div\n    setOpen(false)\n    // Put Values \n    getValue(formValues)\n  }\n  const handleOpenList = () => {\n    if (open === false) {\n      setOpen(true)\n    } else if (open === true)\n      setOpen(false)   \n  }\n  \n  return (\n    <div className=\"new-workout-form\">\n      <div className=\"add-exercice\">\n        <AiFillPlusCircle color=\"#F8BD33\" onClick={handleOpenList} size={32}/>\n      </div>\n        <div className=\"select-form-container\">\n          <form \n            className={`add-exercice-form ${open ? \"add-exercice-form\" : \"add-exercice-form-open\"}`}\n            onChange={handleChange} >\n            <label htmlFor=\"reps\">Nombre de reps</label>\n            <select name=\"reps\" id=\"add-reps\">\n            {[...Array(20)].map((x, i) => \n              <option key={i} value={i+1}>{i+1}</option>\n            )}\n            </select>\n            <label htmlFor=\"series\">nombre de series </label>\n            <select name=\"series\" id=\"add-series\">\n            {[...Array(10)].map((x, i) => \n              <option key={i} value={i+1}>{i+1}</option>\n            )}\n            </select>\n          \n        <Select options={exercicesTitles} size={'large'} getValue={getValue}/>\n        <button onClick={handleSubmit}>Submit</button>\n          </form>\n        </div>\n\n    </div>  \n  )   \n}\n  \nexport default AddExerciceToWorkoutForm\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport AddExerciceToWorkoutForm from '../AddExerciceToWorkoutForm/index'\nimport {modifyWorkout} from '../../apiCalls/index'\n\n\n// icons\nimport { MdPlusOne } from \"react-icons/md\"\nimport { BiReset} from \"react-icons/bi\"\nimport { VscCheck } from \"react-icons/vsc\"\nimport { MdDeleteForever } from \"react-icons/md\"\n\nimport api from '../../api'\n\nfunction Workout() {\n\n  // get workout _id in url parameter\n  let {_id} = useParams()\n  const demo = {_id: 345,\n    title: \"seance demo 2\",\n    exercice: [{\n     name: 'développé incliné',\n     reps: 10,\n     series: 4,\n     performedSeries: 0\n   },\n   {\n     name: 'pompes',\n     reps: 10,\n     series: 10,\n     performedSeries: 0\n   },\n   {\n     name: 'pompes',\n     reps: 10,\n     series: 10,\n     performedSeries: 0\n   }]}\n  const [workout, setWorkout] = useState(demo)\n\n  useEffect(() => {\n    getWorkoutById(_id)\n  },[_id])\n\n  // Get Workout Values from Api and put them in state\n  const getWorkoutById = (id) => {\n    api.get(`workout/${id}`)  \n    .then(function (response) {\n      setWorkout(response.data)  \n    })\n    .catch(function (error) { \n      console.error(error);\n    })\n  }\n  \n  const getValue = (formValues) => {\n\n    //On AddExerciceToWorkoutForm form submit:\n    //Add the new exercice in workout\n    workout.exercice.push(formValues)\n    setWorkout(workout)\n  \n  // then persist it in database\n    modifyWorkout(workout)\n  // reload new datas from database\n    getWorkoutById(_id)\n  }\n    const incrementperformedSeries = (index, reset) => {\n      if (reset) {\n        // Reset PerformedSeries counter\n       workout.exercice[index].performedSeries = 0  \n      } else if (workout.exercice[index].performedSeries < workout.exercice[index].series) {\n          // Increment PerformedSeries counter\n         workout.exercice[index].performedSeries ++\n         \n      }\n      // then persist it in database\n      modifyWorkout(workout)\n      //setWorkout(workout) WTF ça marche pas => voir PK???\n      getWorkoutById(_id)    \n  }\n  const deleteExerciceToWorkout = (index) => {\n\n    workout.exercice.splice(index, 1)\n      // setWorkouts([...workouts], workout)\n      modifyWorkout(workout)\n      getWorkoutById(_id) \n  }\n  function Div() {\n\n    let checked = false\n\n    return(\n      workout.exercice.map((exerciceDetails, index) => \n\n          <div key={index} className=\"workout-details-container\">\n          {exerciceDetails.performedSeries === exerciceDetails.series ? checked = true : checked = false }\n            <div className=\"workout-details-1\">\n              <h4 className=\"workout-details-title\">\n                {exerciceDetails.name} \n                {checked && <VscCheck />}\n              </h4>\n              <div><MdDeleteForever color={'#E2697E'} size={27} onClick={() => deleteExerciceToWorkout(index)} /></div>  \n            </div>\n            <div>{exerciceDetails.reps} Reps</div>\n            <div>\n              <div className=\"workout-details-2\" key={index}>\n                <div className=\"workout-details-3\">\n\n                  <div className=\"workout-series\">{exerciceDetails.performedSeries}<span className=\"workout-series-span\">/</span> </div>\n                  <div className={`${checked ? \"workout-series\" : \"workout-series-undo\" }`}>{exerciceDetails.series} </div>\n                  <div>&nbsp;Séries</div>\n                </div>\n                <div className=\"workout-details-increment\">\n                  <div>\n                    {checked && <VscCheck size={27} />}\n                    {!checked && <MdPlusOne size={27} color={'#F8BD33'}  onClick={() => incrementperformedSeries(index)}/>}\n                  </div>\n                  <div onClick={(reset) => incrementperformedSeries(index, reset)}><BiReset color={'#12C380'} size={27} /></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n        )   \n      }\n  \n    return ( \n        <div className=\"workout-container\">\n         <div className=\"workout-add\">\n          <div>\n            <AddExerciceToWorkoutForm getValue={getValue} />\n          </div>\n        </div>\n          <div className=\"workout-name\">  \n          {workout.title}\n          </div>\n          <div>\n          <Div />\n        </div> \n      </div> \n    )\n  }\n\n  export default Workout;","import React,{ useState, useContext, useEffect } from 'react'\nimport {ExerciceContext} from '../Context/ExerciceContext'\nimport {WorkoutContext} from '../Context/WorkoutContext'\nimport api from '../../api'\nimport {getWorkouts} from '../../apiCalls'\nimport { useHistory } from \"react-router-dom\";\nimport { IoIosAddCircle } from \"react-icons/io\"\nimport { AiFillWarning } from \"react-icons/ai\"\n\n\n\nfunction NewWorkout () {\n  const [workouts, setWorkouts] = useContext(WorkoutContext)\n  const exercices = useContext(ExerciceContext)\n  const [open, setOpen] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(true)\n\n  const exercicesTitles = exercices[0].map(exerciceTitle => exerciceTitle.title)\n  const history = useHistory()\n  \n  const [form, setForm] = useState({\n    title: '',\n    exercice: [\n      {\n      name: exercicesTitles[0],\n      reps: 0,\n      series: 0,\n      performedSeries: 0\n    }\n  ]} )\n  const initialExercice = {\n    name: exercicesTitles[0],\n    reps: 0,\n    series: 0,\n    performedSeries: 0\n  }\n  const [exerciceArray, setExerciceArray] = useState(initialExercice)\n\n  const handleChange = (event) => {\n\n    const name = event.target.name\n     setForm({\n       ...form,\n       [name]: event.target.value  \n    }) \n  }\n  const handleChangeExercice = (event) => {\n    const name = event.target.name  \n     setExerciceArray({\n      ...exerciceArray,\n      [name]: event.target.value  \n   }) \n    }\n\n    const handleSubmitNewExercice = (event) => {\n\n      event.preventDefault()\n      // Delete initial exercice from initial state\n      if (exerciceArray.name === undefined ) {\n        setErrorMessage(\"choisir un exercice\")\n      } else if (exerciceArray.reps === 0 ) {\n        setErrorMessage(\"definir le nombre de répétition\")\n      }else if (exerciceArray.series === 0) {\n        setErrorMessage(\"definir le nombre de séries\")\n      }else {\n\n        if (form.exercice[0].reps === 0 && form.exercice[0].series === 0) {\n          form.exercice.splice(0, 1)\n        }\n        // Push the new exercice in the workout\n        form.exercice.push(exerciceArray)\n        setForm({...form, form})\n        // reset form values\n        setExerciceArray({\n        ...exerciceArray,\n        name: exercicesTitles[0],\n        reps: 0,\n        series: 0,\n      })\n      setErrorMessage(false)\n      setOpen(false)\n      } \n  }\n  \n  const handleSubmit = (event) => {\n    \n    event.preventDefault()\n\n    if (form.exercice[0].reps === 0 && form.exercice[0].series === 0) {\n      setErrorMessage(\"Veuillez ajouter au moins un exercice\")\n    } else if (form.title === \"\") {\n      setErrorMessage(\"ajouter un nom\")\n    } else {\n      api.post('workout', form )\n        .then(function (response) {\n          console.log(response)\n        })\n        .catch(function (error) { \n          console.error(error);\n        })\n      getWorkouts(setWorkouts)\n      history.push('/');\n    }\n  }\n  \n  const handleAddBtn = () => {\n    if (open === false) {\n      setOpen(true)\n    } else if (open === true) {\n      setOpen(false)\n    }\n  }\n  // ERROR MESSAGES\n  useEffect(() => {\n\n    if (form.exercice[0].reps === 0 || form.exercice[0].series) {\n      setErrorMessage(false)\n    }\n  },[form.exercice])\n  useEffect(() => {\n\n    if (form.exercice[0].reps === 0 || form.exercice[0].series) {\n      setErrorMessage(false)\n    }\n  },[form.exercice])\n  const buildOptions = () => {\n    var arr = [];\n\n    for (let i = 1; i <= 10; i++) {\n        arr.push(<option key={i} value=\"{i}\">{i}</option>)\n    }\n\n    return arr; \n  }\n  return (\n    <form className=\"new-workout-container\" >\n\n      <div className=\"new-workout-title-container\" onChange={handleChange}>\n        <input required autoComplete=\"off\" placeholder=\"Entrer nom du workout\" className=\"new-workout-title\" name=\"title\" />        \n      </div>\n      \n          {/* EXERCICES DATAS */}\n          <div className=\"new-workout-datas-container\">\n            <div className=\"new-workout-exercices-container\">\n              <div className=\"new-workout-exercices-title\">Exercices:</div>\n              <div onClick={handleAddBtn} className=\"new-workout-add\">Ajouter&nbsp;<IoIosAddCircle size={24}/></div> \n            </div>\n            { errorMessage &&<div className=\"new-workout-exercices-list\">\n               <div className=\"new-workout-warning\"><AiFillWarning size={18} color={'#E2697E'}/>&nbsp;{errorMessage}</div>\n            </div>}\n            <div className=\"new-workout-exercices-list\">\n              {form.exercice[0].reps === 0 && <div className=\"new-workout-warning\"><AiFillWarning size={18} color={'#E2697E'}/>&nbsp;Pas encore d'exercice ajouté</div>} \n              {form.exercice[0].reps !== 0 && form.exercice.map((exercice, i) => \n              <div className=\"new-workout-datas\" key={i}>\n                <div className=\"new-workout-name\">{exercice.name}</div>\n                <div>{exercice.reps} reps</div>\n                <div>{exercice.series} series</div>\n                </div>\n              )}\n            </div>\n          </div>\n      {/* ADD EXERCICE FORM */}\n      \n      <div className={`${open ? 'new-workout-addform' : 'new-workout-addform-hidden'}`} onChange={handleChangeExercice}>\n          \n          {/* REPS */}\n          <div className=\"new-workout-select\">\n          <label htmlFor=\"reps\">Nombre de Répétitions: <span>{exerciceArray.reps}</span></label>\n            <select className=\"new-workout-input\" onChange={handleChange} name={\"reps\"}  id=\"add-reps\" defaultValue={exerciceArray.reps}>\n              {[...Array(20)].map((x, i) => \n                <option key={i}  value={i}>{i}</option>\n              )}\n            </select>\n          </div>\n          <input type=\"reset\" value=\"Reset\"></input>\n          {/* SERIES */}\n          <div className=\"new-workout-select\">\n            <label htmlFor=\"series\">Nombre de Séries: <span>{exerciceArray.series}</span></label>\n            <select className=\"new-workout-input\" name=\"series\" id=\"add-series\" defaultValue={exerciceArray.series}>\n              {[...Array(10)].map((x, i) => \n                <option key={i} value={i}>{i}</option>\n              )}\n            </select>\n          </div>\n          {/* EXERCICES */}\n          <div className=\"new-workout-select\">\n          <label htmlFor=\"series\">Exercice: {form.exercice[0].length}</label>\n            <select className=\"new-workout-input\" name=\"name\" onChange={handleChange} defaultValue={exerciceArray.name}>\n              <option hidden value=\"\">Choisir exercice</option> \n              {exercicesTitles.map((option, i) =>\n                <option key={i} value={option}>{option}</option>\n              )}\n            </select>\n            <div className=\"new-workout-addbtn-container\">\n              <button className=\"new-workout-addbtn\" onClick={handleSubmitNewExercice}>Ajouter Exercice !</button>\n            </div>\n          </div>\n      </div>\n      <button className=\"new-workout-submitbtn\" onClick={handleSubmit}>Créer ce workout !</button>\n    </form>\n  )\n}\nexport default NewWorkout","// npm\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Components\nimport Home from './Components/Home'\nimport Login from './Components/Login'\nimport Exercices from './Components/Exercices'\nimport Workout from './Components/Workout'\nimport NewWorkout from './Components/NewWorkout'\n\n// Css\nimport './App.css'\n\n// Contexts\nimport { ExerciceProvider } from '../src/Components/Context/ExerciceContext'\nimport { WorkoutProvider } from '../src/Components/Context/WorkoutContext'\n\nfunction App() {\n  return (\n\n  <WorkoutProvider>\n    <ExerciceProvider>\n      <div className=\"App\">\n          <Router>\n            <div>\n              <nav>\n              <Link className=\"logo\" to=\"/\">Pwero</Link>\n              <div>\n                <ul>\n                  <li>\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/login\">Login</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/exercices\">Exercices</Link>\n                  </li>\n                </ul>\n              </div>\n                \n              </nav>\n\n              {/* A <Switch> looks through its children <Route>s and\n                  renders the first one that matches the current URL. */}\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/exercices\">\n                  <Exercices />\n                </Route>\n                <Route path=\"/workout/:_id\">\n                  <Workout />\n                </Route>\n                <Route path=\"/new-workout/\">\n                  <NewWorkout />\n                </Route>\n              </Switch>\n            </div>\n          </Router>  \n      </div>\n    </ExerciceProvider>  \n  </WorkoutProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}